{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApps, type FirebaseApp } from 'firebase/app';\nimport { getFirestore, type Firestore } from 'firebase/firestore';\nimport { getStorage, type FirebaseStorage } from 'firebase/storage';\n\n// Log raw environment variables as seen by this module\nconsole.log(\"--- Reading Firebase Environment Variables (src/lib/firebase.ts) ---\");\nconsole.log(\"Raw NEXT_PUBLIC_FIREBASE_API_KEY:\", process.env.NEXT_PUBLIC_FIREBASE_API_KEY || \"MISSING/undefined\");\nconsole.log(\"Raw NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN:\", process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN || \"MISSING/undefined\");\nconsole.log(\"Raw NEXT_PUBLIC_FIREBASE_PROJECT_ID:\", process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID || \"MISSING/undefined\");\nconsole.log(\"Raw NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET:\", process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET || \"MISSING/undefined\");\nconsole.log(\"Raw NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID:\", process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID || \"MISSING/undefined\");\nconsole.log(\"Raw NEXT_PUBLIC_FIREBASE_APP_ID:\", process.env.NEXT_PUBLIC_FIREBASE_APP_ID || \"MISSING/undefined\");\nconsole.log(\"Raw NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID:\", process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID || \"Not defined (Optional)\");\nconsole.log(\"------------------------------------------------------------------\");\n\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID,\n};\n\n// Universal logging for the constructed Firebase configuration\nconsole.log(\"--- Firebase Configuration Object (src/lib/firebase.ts) ---\");\nconsole.log(\"Environment Type:\", typeof window !== 'undefined' ? \"Client\" : \"Server\");\nconsole.log(\"Using API Key:\", firebaseConfig.apiKey ? \"Present\" : \"MISSING or undefined in config\");\nconsole.log(\"Using Auth Domain:\", firebaseConfig.authDomain ? \"Present\" : \"MISSING or undefined in config\");\nconsole.log(\"Using Project ID:\", firebaseConfig.projectId ? \"Present\" : \"MISSING or undefined in config\");\nconsole.log(\"---------------------------------------------------------\");\n\nlet app: FirebaseApp | null = null;\nlet db: Firestore | null = null;\nlet storage: FirebaseStorage | null = null;\n\nif (!firebaseConfig.apiKey || !firebaseConfig.projectId) {\n  console.error(\n    \"CRITICAL FIREBASE CONFIG ERROR (src/lib/firebase.ts): API Key or Project ID is missing or undefined in the firebaseConfig object. Firebase services will likely be unavailable.\" +\n    \" Please ensure NEXT_PUBLIC_FIREBASE_API_KEY and NEXT_PUBLIC_FIREBASE_PROJECT_ID are correctly set in your .env file at the project root \" +\n    \"and that the Next.js server has been restarted after changes to .env.\"\n  );\n  // app, db, and storage remain null as per their initial declaration.\n} else {\n  try {\n    if (!getApps().length) {\n      app = initializeApp(firebaseConfig);\n      console.log(\"Firebase app initialized (src/lib/firebase.ts).\");\n    } else {\n      app = getApps()[0]!;\n      console.log(\"Firebase app already initialized (src/lib/firebase.ts).\");\n    }\n    // If app is successfully initialized, then initialize db and storage\n    db = getFirestore(app);\n    storage = getStorage(app);\n\n  } catch (e: any) {\n    console.error(\"FATAL ERROR initializing Firebase App (src/lib/firebase.ts):\", e.message);\n    if (e.code === 'auth/invalid-api-key' || (e.message && e.message.toLowerCase().includes('invalid-api-key'))) {\n       console.error(\n          \"Firebase Error (invalid-api-key possibly, or other init error) from src/lib/firebase.ts: This strongly suggests that your NEXT_PUBLIC_FIREBASE_API_KEY \" +\n          \"is incorrect, missing, or not accessible by the current environment. \" +\n          \"1. Verify the key in your project's root .env file against your Firebase project settings. \" +\n          \"2. Ensure the Next.js development server was restarted after any .env changes.\"\n      );\n    }\n    // app, db, and storage will remain null if initialization failed here.\n    if (typeof window !== 'undefined') {\n      console.error(\"Firebase initialization failed on the client. Some Firebase features may not work.\");\n    }\n  }\n}\n\nexport { app, db, storage };\n"],"names":[],"mappings":";;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,uDAAuD;AACvD,QAAQ,GAAG,CAAC;AACZ,QAAQ,GAAG,CAAC,qCAAqC,+EAA4C;AAC7F,QAAQ,GAAG,CAAC,yCAAyC,0EAAgD;AACrG,QAAQ,GAAG,CAAC,wCAAwC,0DAA+C;AACnG,QAAQ,GAAG,CAAC,4CAA4C,sEAAmD;AAC3G,QAAQ,GAAG,CAAC,iDAAiD,oDAAwD;AACrH,QAAQ,GAAG,CAAC,oCAAoC,iFAA2C;AAC3F,QAAQ,GAAG,CAAC,4CAA4C,oDAAmD;AAC3G,QAAQ,GAAG,CAAC;AAGZ,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACf;AAEA,+DAA+D;AAC/D,QAAQ,GAAG,CAAC;AACZ,QAAQ,GAAG,CAAC,qBAAqB,6EAA2C;AAC5E,QAAQ,GAAG,CAAC,kBAAkB,eAAe,MAAM,GAAG,YAAY;AAClE,QAAQ,GAAG,CAAC,sBAAsB,eAAe,UAAU,GAAG,YAAY;AAC1E,QAAQ,GAAG,CAAC,qBAAqB,eAAe,SAAS,GAAG,YAAY;AACxE,QAAQ,GAAG,CAAC;AAEZ,IAAI,MAA0B;AAC9B,IAAI,KAAuB;AAC3B,IAAI,UAAkC;AAEtC,IAAI,CAAC,eAAe,MAAM,IAAI,CAAC,eAAe,SAAS,EAAE;IACvD,QAAQ,KAAK,CACX,oLACA,6IACA;AAEF,qEAAqE;AACvE,OAAO;IACL,IAAI;QACF,IAAI,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;YACrB,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;YACpB,QAAQ,GAAG,CAAC;QACd,OAAO;YACL,MAAM,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;YAClB,QAAQ,GAAG,CAAC;QACd;QACA,qEAAqE;QACrE,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;QAClB,UAAU,CAAA,GAAA,oLAAA,CAAA,aAAU,AAAD,EAAE;IAEvB,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,gEAAgE,EAAE,OAAO;QACvF,IAAI,EAAE,IAAI,KAAK,0BAA2B,EAAE,OAAO,IAAI,EAAE,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC,oBAAqB;YAC1G,QAAQ,KAAK,CACV,4JACA,0EACA,gGACA;QAEN;QACA,uEAAuE;QACvE,uCAAmC;;QAEnC;IACF;AACF","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/mock-data.ts"],"sourcesContent":["\nimport type { Product } from '@/lib/types';\nimport productsData from '@/lib/data/products.json';\n\n// The MOCK_PRODUCTS array is now sourced from the imported JSON data.\n// This allows for easier management of product data in a separate file.\nexport const MOCK_PRODUCTS: Product[] = productsData as Product[];\n\n    "],"names":[],"mappings":";;;AAEA;;AAIO,MAAM,gBAA2B,sGAAA,CAAA,UAAY","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/products/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { db } from '@/lib/firebase';\nimport { collection, doc, getDoc, getDocs, query, where, limit, orderBy, setDoc, writeBatch } from 'firebase/firestore';\nimport type { Product, Review, ProductImage } from '@/lib/types';\nimport { MOCK_PRODUCTS } from '@/lib/mock-data';\n\ninterface SeedResult {\n  success: boolean;\n  message: string;\n  count?: number;\n}\n\nexport async function seedProductsToFirestore(): Promise<SeedResult> {\n  if (!db) {\n    console.error(\"seedProductsToFirestore: Firestore database instance is not available. Aborting seed.\");\n    return { success: false, message: \"Database service is not available. Seeding aborted.\" };\n  }\n  if (MOCK_PRODUCTS.length === 0) {\n    console.warn(\"seedProductsToFirestore: No mock products found to seed.\");\n    return { success: false, message: \"No mock products found to seed.\" };\n  }\n  console.log(`seedProductsToFirestore: Attempting to seed ${MOCK_PRODUCTS.length} products...`);\n\n  const batch = writeBatch(db!); // Use db!\n  let seededCount = 0;\n\n  MOCK_PRODUCTS.forEach(product => {\n    const productDocRef = doc(db!, 'products', product.id); // Use db!\n    const productData: Omit<Product, 'id'> = {\n      name: product.name,\n      description: product.description,\n      careInstructions: product.careInstructions,\n      imageUrls: product.imageUrls.map(img => ({ url: img.url, dataAiHint: img.dataAiHint } as ProductImage)),\n      price: product.price,\n      category: product.category,\n      featured: product.featured || false,\n      sizeAndDimensions: product.sizeAndDimensions,\n      material: product.material,\n      reviews: product.reviews ? product.reviews.map(r => ({ ...r } as Review)) : [],\n    };\n    batch.set(productDocRef, productData);\n    seededCount++;\n  });\n\n  try {\n    await batch.commit();\n    console.log(`seedProductsToFirestore: Successfully seeded ${seededCount} products.`);\n    return { success: true, message: `Successfully seeded ${seededCount} products to Firestore.`, count: seededCount };\n  } catch (error) {\n    console.error(\"Error seeding products to Firestore:\", error);\n    const errorMessage = error instanceof Error ? error.message : \"An unknown error occurred during seeding.\";\n    return { success: false, message: `Failed to seed products: ${errorMessage}` };\n  }\n}\n\nexport async function getProducts(): Promise<Product[]> {\n  if (!db) {\n    console.error(\"getProducts: Firestore database instance is not available. Falling back to MOCK_PRODUCTS.\");\n    return MOCK_PRODUCTS;\n  }\n  try {\n    console.log('getProducts: Attempting to fetch products from Firestore...');\n    const productsColRef = collection(db!, 'products'); // Use db!\n    let productsSnap = await getDocs(productsColRef);\n\n    if (productsSnap.empty) {\n      console.log('getProducts: Firestore is empty. Attempting to seed database with mock data from products.json...');\n      // seedProductsToFirestore already checks for db, so no need for db! here in the call\n      const seedResult = await seedProductsToFirestore(); \n      if (seedResult.success && seedResult.count && seedResult.count > 0) {\n        console.log(`getProducts: Seeding successful: ${seedResult.message}. Re-fetching products from Firestore.`);\n        productsSnap = await getDocs(productsColRef); // productsColRef was defined with db!\n        if (productsSnap.empty) {\n          console.warn(\"getProducts: Firestore is still empty after successful seeding and re-fetch. This might indicate an issue with data propagation or Firestore rules. Falling back to MOCK_PRODUCTS (from products.json).\");\n          return MOCK_PRODUCTS;\n        }\n      } else {\n        console.error(`getProducts: Seeding failed or yielded no products: ${seedResult.message}. Falling back to MOCK_PRODUCTS (from products.json).`);\n        return MOCK_PRODUCTS;\n      }\n    }\n    \n    const products: Product[] = productsSnap.docs.map(docSnap => {\n      const data = docSnap.data();\n      return {\n        id: docSnap.id,\n        name: data.name || '',\n        description: data.description || '',\n        careInstructions: data.careInstructions || '',\n        imageUrls: data.imageUrls && data.imageUrls.length > 0 ? data.imageUrls : [{ url: 'https://placehold.co/600x400.png', dataAiHint: 'placeholder image' }],\n        price: data.price || 'Rs. 0',\n        category: data.category || 'Uncategorized',\n        featured: data.featured || false,\n        sizeAndDimensions: data.sizeAndDimensions || 'N/A',\n        material: data.material || 'N/A',\n        reviews: data.reviews || [],\n      } as Product;\n    });\n    console.log(`getProducts: Successfully fetched ${products.length} products from Firestore.`);\n    return products;\n  } catch (error) {\n    console.error(\"getProducts: Error during Firestore operation:\", error, \"Falling back to MOCK_PRODUCTS (from products.json).\");\n    return MOCK_PRODUCTS;\n  }\n}\n\nexport async function getProductById(id: string): Promise<Product | null> {\n  if (!db) {\n    console.error(`getProductById: Firestore database instance is not available for product ${id}. Returning null.`);\n    return null;\n  }\n  try {\n    console.log(`getProductById: Attempting to fetch product with ID ${id} from Firestore...`);\n    const productDocRef = doc(db!, 'products', id); // Use db!\n    const productSnap = await getDoc(productDocRef);\n\n    if (productSnap.exists()) {\n      console.log(`getProductById: Product ${id} found in Firestore.`);\n      const data = productSnap.data();\n      return {\n        id: productSnap.id,\n        name: data.name || '',\n        description: data.description || '',\n        careInstructions: data.careInstructions || '',\n        imageUrls: data.imageUrls && data.imageUrls.length > 0 ? data.imageUrls : [{ url: 'https://placehold.co/600x400.png', dataAiHint: 'placeholder image' }],\n        price: data.price || 'Rs. 0',\n        category: data.category || 'Uncategorized',\n        featured: data.featured || false,\n        sizeAndDimensions: data.sizeAndDimensions || 'N/A',\n        material: data.material || 'N/A',\n        reviews: data.reviews || [],\n      } as Product;\n    } else {\n      console.log(`getProductById: Product with ID ${id} not found in Firestore.`);\n      const productsColRef = collection(db!, 'products'); // Use db!\n      const quickCheckSnap = await getDocs(query(productsColRef, limit(1)));\n      if (quickCheckSnap.empty) {\n        console.log(`getProductById: Product ${id} not found, and products collection seems empty. Attempting to seed...`);\n        const seedResult = await seedProductsToFirestore(); // seedProductsToFirestore already checks for db\n         if (seedResult.success && seedResult.count && seedResult.count > 0) {\n            console.log(`getProductById: Seeding successful after ${id} not found. Re-fetching product ${id}.`);\n            const productSnapAfterSeed = await getDoc(productDocRef); // productDocRef defined with db!\n            if (productSnapAfterSeed.exists()) {\n              console.log(`getProductById: Product ${id} found after seeding.`);\n              const data = productSnapAfterSeed.data();\n              return {\n                id: productSnapAfterSeed.id,\n                name: data.name || '',\n                description: data.description || '',\n                careInstructions: data.careInstructions || '',\n                imageUrls: data.imageUrls && data.imageUrls.length > 0 ? data.imageUrls : [{ url: 'https://placehold.co/600x400.png', dataAiHint: 'placeholder image' }],\n                price: data.price || 'Rs. 0',\n                category: data.category || 'Uncategorized',\n                featured: data.featured || false,\n                sizeAndDimensions: data.sizeAndDimensions || 'N/A',\n                material: data.material || 'N/A',\n                reviews: data.reviews || [],\n              } as Product;\n            } else {\n              console.log(`getProductById: Product ${id} still not found after attempting to seed. Returning null.`);\n              return null;\n            }\n        } else {\n             console.error(`getProductById: Seeding failed or yielded no products when trying to find ${id}: ${seedResult.message}. Returning null.`);\n             return null;\n        }\n      }\n      console.log(`getProductById: Product ${id} not found and collection was not empty or seeding did not find it. Returning null.`);\n      return null;\n    }\n  } catch (error) {\n    console.error(`getProductById: Error fetching product with ID ${id}:`, error, \"Returning null.\");\n    return null;\n  }\n}\n\nexport async function getFeaturedProducts(count: number): Promise<Product[]> {\n  if (!db) {\n    console.error(\"getFeaturedProducts: Firestore database instance is not available. Falling back to MOCK_PRODUCTS.\");\n    return MOCK_PRODUCTS.filter(p => p.featured).slice(0, count);\n  }\n  try {\n    console.log(`getFeaturedProducts: Attempting to fetch ${count} featured products from Firestore...`);\n    const productsColRef = collection(db!, 'products'); // Use db!\n    let featuredProductsQuery = query(productsColRef, where('featured', '==', true), limit(count));\n    let productsSnap = await getDocs(featuredProductsQuery);\n\n    let productsToReturn: Product[] = [];\n\n    if (productsSnap.empty) {\n      console.log(\"getFeaturedProducts: 'featured' query returned no results. Checking if entire collection is empty for seeding...\");\n      const allProductsCheckQuery = query(productsColRef, limit(1)); // productsColRef defined with db!\n      const anyProductSnap = await getDocs(allProductsCheckQuery);\n\n      if (anyProductSnap.empty) {\n        console.log('getFeaturedProducts: Products collection is entirely empty. Attempting to seed database with mock data...');\n        const seedResult = await seedProductsToFirestore(); // seedProductsToFirestore already checks for db\n        if (seedResult.success && seedResult.count && seedResult.count > 0) {\n          console.log(`getFeaturedProducts: Seeding successful: ${seedResult.message}. Re-fetching featured products.`);\n          productsSnap = await getDocs(featuredProductsQuery); // featuredProductsQuery defined with db!\n          if (productsSnap.empty) {\n              console.warn(\"getFeaturedProducts: 'featured' query still empty after successful seed.\");\n          }\n        } else {\n          console.error(`getFeaturedProducts: Seeding failed or yielded no products: ${seedResult.message}.`);\n        }\n      }\n      \n      if (productsSnap.empty) { \n         console.log(\"getFeaturedProducts: No 'featured' products found. Falling back to a general query for any products.\");\n         const fallbackQuery = query(productsColRef, orderBy('name'), limit(count)); // productsColRef defined with db!\n         productsSnap = await getDocs(fallbackQuery);\n         if (productsSnap.empty) {\n           console.log(\"getFeaturedProducts: Fallback query also returned no results. The collection might be truly empty or seeding failed. Falling back to MOCK_PRODUCTS.\");\n           return MOCK_PRODUCTS.slice(0, count); \n         }\n      }\n    }\n    \n    productsToReturn = productsSnap.docs.map(docSnap => {\n       const data = docSnap.data();\n      return {\n        id: docSnap.id,\n        name: data.name || '',\n        description: data.description || '',\n        careInstructions: data.careInstructions || '',\n        imageUrls: data.imageUrls && data.imageUrls.length > 0 ? data.imageUrls : [{ url: 'https://placehold.co/600x400.png', dataAiHint: 'placeholder image' }],\n        price: data.price || 'Rs. 0',\n        category: data.category || 'Uncategorized',\n        featured: data.featured || false,\n        sizeAndDimensions: data.sizeAndDimensions || 'N/A',\n        material: data.material || 'N/A',\n        reviews: data.reviews || [],\n      } as Product;\n    });\n\n    if (productsToReturn.length === 0 && MOCK_PRODUCTS.length > 0) {\n        console.warn(\"getFeaturedProducts: All Firestore fetches resulted in no products. Falling back to MOCK_PRODUCTS for featured products.\");\n        return MOCK_PRODUCTS.filter(p => p.featured).slice(0, count);\n    }\n    \n    console.log(`getFeaturedProducts: Fetched ${productsToReturn.length} products.`);\n    return productsToReturn;\n\n  } catch (error) {\n    console.error(\"getFeaturedProducts: Error fetching featured products:\", error, \"Falling back to MOCK_PRODUCTS.\");\n    return MOCK_PRODUCTS.filter(p => p.featured).slice(0, count);\n  }\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 601, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 622, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/recommend-products-from-image-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview AI-powered product recommendations based on an uploaded image of a user's space\n * and a list of available products.\n *\n * - recommendProductsFromImage - A function that recommends products.\n * - RecommendProductsFromImageInput - The input type for the function.\n * - RecommendProductsFromImageOutput - The return type for the function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\n// Define a schema for simplified product information to be passed to the AI\nconst SimplifiedProductInfoSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  description: z.string(),\n  category: z.string().optional(),\n});\n\nconst RecommendProductsFromImageInputSchema = z.object({\n  imageDataUri: z\n    .string()\n    .describe(\n      \"A photo of the user's space, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n    ),\n  availableProductsJson: z\n    .string()\n    .describe(\n      'A JSON string representing an array of available products. Each product object should include at least id, name, and description.'\n    ),\n});\nexport type RecommendProductsFromImageInput = z.infer<\n  typeof RecommendProductsFromImageInputSchema\n>;\n\nconst RecommendedProductSchema = z.object({\n  productId: z.string().describe('The ID of the recommended product.'),\n  productName: z.string().describe('The name of the recommended product.'),\n  reason: z\n    .string()\n    .describe('A brief explanation why this product is a good fit for the space in the image.'),\n});\n\nconst RecommendProductsFromImageOutputSchema = z.object({\n  recommendations: z\n    .array(RecommendedProductSchema)\n    .describe('A list of recommended products with reasons.'),\n  overallFeedback: z.string().optional().describe('General feedback or observations about the space in the image, if any.')\n});\nexport type RecommendProductsFromImageOutput = z.infer<\n  typeof RecommendProductsFromImageOutputSchema\n>;\nexport type RecommendedProduct = z.infer<typeof RecommendedProductSchema>;\n\n\nexport async function recommendProductsFromImage(\n  input: RecommendProductsFromImageInput\n): Promise<RecommendProductsFromImageOutput> {\n  return recommendProductsFromImageFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'recommendProductsFromImagePrompt',\n  input: {schema: RecommendProductsFromImageInputSchema},\n  output: {schema: RecommendProductsFromImageOutputSchema},\n  prompt: `You are an expert interior design consultant for 'Aarambh Decor', specializing in home decor.\nA user has uploaded an image of a space they wish to decorate. Your task is to analyze this image:\nUser's Space: {{media url=imageDataUri}}\n\nBased on the style, colors, lighting, existing elements, and overall ambiance in the image, recommend up to 3-5 products from the following list that would complement or enhance the space. For each recommended product, provide a concise reason (1-2 sentences) why it's a good fit.\n\nAvailable Aarambh Decor products (JSON format):\n{{{availableProductsJson}}}\n\nFocus on how the products would visually and stylistically integrate into the user's uploaded image.\nIf the image is unclear or not a room, state that you cannot provide recommendations based on the image.\nProvide some brief overall feedback or observations about the user's space if you have any, separate from the product recommendations.\nReturn your recommendations as a list of objects, each containing 'productId', 'productName', and 'reason'.\nEnsure 'productId' and 'productName' exactly match the provided product list.\n`,\n});\n\nconst recommendProductsFromImageFlow = ai.defineFlow(\n  {\n    name: 'recommendProductsFromImageFlow',\n    inputSchema: RecommendProductsFromImageInputSchema,\n    outputSchema: RecommendProductsFromImageOutputSchema,\n  },\n  async input => {\n    try {\n      JSON.parse(input.availableProductsJson); // Validate JSON\n    } catch (e) {\n      throw new Error(\"Invalid JSON format for availableProductsJson.\");\n    }\n    const {output} = await prompt(input);\n    if (!output) {\n        throw new Error(\"AI failed to generate recommendations.\");\n    }\n    return output;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;;CAOC,GAED;AACA;AAAA;;;;;;AAEA,4EAA4E;AAC5E,MAAM,8BAA8B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,IAAI,uIAAA,CAAA,IAAC,CAAC,MAAM;IACZ,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM;IACd,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM;IACrB,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AAC/B;AAEA,MAAM,wCAAwC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrD,cAAc,uIAAA,CAAA,IAAC,CACZ,MAAM,GACN,QAAQ,CACP;IAEJ,uBAAuB,uIAAA,CAAA,IAAC,CACrB,MAAM,GACN,QAAQ,CACP;AAEN;AAKA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,QAAQ,uIAAA,CAAA,IAAC,CACN,MAAM,GACN,QAAQ,CAAC;AACd;AAEA,MAAM,yCAAyC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtD,iBAAiB,uIAAA,CAAA,IAAC,CACf,KAAK,CAAC,0BACN,QAAQ,CAAC;IACZ,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAClD;AAOO,eAAe,2BACpB,KAAsC;IAEtC,OAAO,+BAA+B;AACxC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAqC;IACrD,QAAQ;QAAC,QAAQ;IAAsC;IACvD,QAAQ,CAAC;;;;;;;;;;;;;;AAcX,CAAC;AACD;AAEA,MAAM,iCAAiC,mHAAA,CAAA,KAAE,CAAC,UAAU,CAClD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,IAAI;QACF,KAAK,KAAK,CAAC,MAAM,qBAAqB,GAAG,gBAAgB;IAC3D,EAAE,OAAO,GAAG;QACV,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,IAAI,CAAC,QAAQ;QACT,MAAM,IAAI,MAAM;IACpB;IACA,OAAO;AACT;;;IA5CoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 716, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {seedProductsToFirestore as '002ffea14902e42b8dc345f2f6a9b0677ae7612c80'} from 'ACTIONS_MODULE0'\nexport {getProducts as '009c0e4f9c36b44a23d3734f13b4298bc7b33dd084'} from 'ACTIONS_MODULE0'\nexport {getProductById as '40085e20f65caaa54feef8e67c51686a8fea0476fc'} from 'ACTIONS_MODULE0'\nexport {getFeaturedProducts as '407a6f9917f614e1200275cb077c7f741008f38c04'} from 'ACTIONS_MODULE0'\nexport {recommendProductsFromImage as '4005e1060a3a5ae5f10a35c471fcac3cc4e9863a5b'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AAIA","debugId":null}},
    {"offset": {"line": 783, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/home-page-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/home-page-client.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/home-page-client.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgS,GAC7T,8DACA","debugId":null}},
    {"offset": {"line": 797, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/home-page-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/home-page-client.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/home-page-client.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4Q,GACzS,0CACA","debugId":null}},
    {"offset": {"line": 811, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 821, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/header.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/layout/header.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/layout/header.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoS,GACjU,kEACA","debugId":null}},
    {"offset": {"line": 835, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/header.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/layout/header.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/layout/header.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA","debugId":null}},
    {"offset": {"line": 849, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 859, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/footer.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/layout/footer.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/layout/footer.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoS,GACjU,kEACA","debugId":null}},
    {"offset": {"line": 873, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/footer.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/layout/footer.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/layout/footer.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA","debugId":null}},
    {"offset": {"line": 887, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 897, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["\nimport { Suspense } from 'react';\nimport HomePageClient from './home-page-client'; // The refactored client part\nimport Header from '@/components/layout/header';\nimport Footer from '@/components/layout/footer';\nimport { Loader2 } from 'lucide-react';\nimport { getProducts, getFeaturedProducts, seedProductsToFirestore } from '@/app/products/actions'; // Added seedProductsToFirestore\nimport type { Product } from '@/lib/types';\n\nconst FEATURED_PRODUCTS_COUNT = 6;\n\n// This is the new Server Component entry for the `/` route\nexport default async function Page() {\n  // --- ADDED FOR SEEDING/UPDATING PRODUCTS ---\n  // This will seed products from products.json (via MOCK_PRODUCTS) into Firestore.\n  // If a product ID already exists, it will be overwritten with the data from products.json.\n  // This effectively \"makes changes in the database for existing products\".\n  // Consider moving this to a more controlled environment for production (e.g., a specific admin action).\n  console.log(\"Homepage: Attempting to seed/update products from products.json...\");\n  const seedResult = await seedProductsToFirestore();\n  if (seedResult.success) {\n    console.log(\"Homepage: Product seeding/update successful:\", seedResult.message);\n  } else {\n    console.error(\"Homepage: Product seeding/update failed:\", seedResult.message);\n  }\n  // --- END SEEDING/UPDATING CALL ---\n\n  // Fetch data on the server\n  let initialFeaturedProducts: Product[] = [];\n  let initialAllProducts: Product[] = [];\n  let errorFetchingInitialData = false;\n\n  try {\n    // Using Promise.all to fetch data concurrently\n    const [featuredResult, allResult] = await Promise.allSettled([\n      getFeaturedProducts(FEATURED_PRODUCTS_COUNT),\n      getProducts()\n    ]);\n\n    if (featuredResult.status === 'fulfilled') {\n      initialFeaturedProducts = featuredResult.value;\n    } else {\n      console.error(\"Failed to fetch featured products for homepage (server):\", featuredResult.reason);\n      errorFetchingInitialData = true;\n    }\n\n    if (allResult.status === 'fulfilled') {\n      initialAllProducts = allResult.value;\n    } else {\n      console.error(\"Failed to fetch all products for homepage (server):\", allResult.reason);\n      errorFetchingInitialData = true;\n    }\n\n  } catch (error) { \n    console.error(\"Unexpected error fetching products for homepage (server):\", error);\n    errorFetchingInitialData = true;\n  }\n\n  return (\n    <Suspense fallback={\n      <div className=\"flex flex-col min-h-screen bg-background\">\n        <Header />\n        <main className=\"flex-grow container mx-auto px-2 py-8 md:py-12 flex justify-center items-center\">\n          <Loader2 className=\"h-12 w-12 text-primary animate-spin\" />\n          <p className=\"ml-4 text-lg text-muted-foreground\">Loading Aarambh Decor...</p>\n        </main>\n        <Footer />\n      </div>\n    }>\n      <HomePageClient \n        initialFeaturedProducts={initialFeaturedProducts} \n        initialAllProducts={initialAllProducts}\n        errorFetchingInitialData={errorFetchingInitialData}\n      />\n    </Suspense>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA,sOAAiD,6BAA6B;AAC9E;AACA;AACA;AACA,iOAAoG,gCAAgC;;;;;;;;AAGpI,MAAM,0BAA0B;AAGjB,eAAe;IAC5B,8CAA8C;IAC9C,iFAAiF;IACjF,2FAA2F;IAC3F,0EAA0E;IAC1E,wGAAwG;IACxG,QAAQ,GAAG,CAAC;IACZ,MAAM,aAAa,MAAM,CAAA,GAAA,iIAAA,CAAA,0BAAuB,AAAD;IAC/C,IAAI,WAAW,OAAO,EAAE;QACtB,QAAQ,GAAG,CAAC,gDAAgD,WAAW,OAAO;IAChF,OAAO;QACL,QAAQ,KAAK,CAAC,4CAA4C,WAAW,OAAO;IAC9E;IACA,oCAAoC;IAEpC,2BAA2B;IAC3B,IAAI,0BAAqC,EAAE;IAC3C,IAAI,qBAAgC,EAAE;IACtC,IAAI,2BAA2B;IAE/B,IAAI;QACF,+CAA+C;QAC/C,MAAM,CAAC,gBAAgB,UAAU,GAAG,MAAM,QAAQ,UAAU,CAAC;YAC3D,CAAA,GAAA,iIAAA,CAAA,sBAAmB,AAAD,EAAE;YACpB,CAAA,GAAA,iIAAA,CAAA,cAAW,AAAD;SACX;QAED,IAAI,eAAe,MAAM,KAAK,aAAa;YACzC,0BAA0B,eAAe,KAAK;QAChD,OAAO;YACL,QAAQ,KAAK,CAAC,4DAA4D,eAAe,MAAM;YAC/F,2BAA2B;QAC7B;QAEA,IAAI,UAAU,MAAM,KAAK,aAAa;YACpC,qBAAqB,UAAU,KAAK;QACtC,OAAO;YACL,QAAQ,KAAK,CAAC,uDAAuD,UAAU,MAAM;YACrF,2BAA2B;QAC7B;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6DAA6D;QAC3E,2BAA2B;IAC7B;IAEA,qBACE,8OAAC,qMAAA,CAAA,WAAQ;QAAC,wBACR,8OAAC;YAAI,WAAU;;8BACb,8OAAC,sIAAA,CAAA,UAAM;;;;;8BACP,8OAAC;oBAAK,WAAU;;sCACd,8OAAC,iNAAA,CAAA,UAAO;4BAAC,WAAU;;;;;;sCACnB,8OAAC;4BAAE,WAAU;sCAAqC;;;;;;;;;;;;8BAEpD,8OAAC,sIAAA,CAAA,UAAM;;;;;;;;;;;kBAGT,cAAA,8OAAC,qIAAA,CAAA,UAAc;YACb,yBAAyB;YACzB,oBAAoB;YACpB,0BAA0B;;;;;;;;;;;AAIlC","debugId":null}}]
}
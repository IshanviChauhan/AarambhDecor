{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApps, type FirebaseApp } from 'firebase/app';\nimport { getAuth, browserLocalPersistence, setPersistence } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\n// Log raw environment variables as seen by this module\nconsole.log(\"--- Reading Firebase Environment Variables (src/lib/firebase.ts) ---\");\nconsole.log(\"Raw NEXT_PUBLIC_FIREBASE_API_KEY:\", process.env.NEXT_PUBLIC_FIREBASE_API_KEY || \"MISSING/undefined\");\nconsole.log(\"Raw NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN:\", process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN || \"MISSING/undefined\");\nconsole.log(\"Raw NEXT_PUBLIC_FIREBASE_PROJECT_ID:\", process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID || \"MISSING/undefined\");\nconsole.log(\"Raw NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET:\", process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET || \"MISSING/undefined\");\nconsole.log(\"Raw NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID:\", process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID || \"MISSING/undefined\");\nconsole.log(\"Raw NEXT_PUBLIC_FIREBASE_APP_ID:\", process.env.NEXT_PUBLIC_FIREBASE_APP_ID || \"MISSING/undefined\");\nconsole.log(\"Raw NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID:\", process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID || \"Not defined (Optional)\");\nconsole.log(\"------------------------------------------------------------------\");\n\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID,\n};\n\n// Universal logging for the constructed Firebase configuration\nconsole.log(\"--- Firebase Configuration Object (src/lib/firebase.ts) ---\");\nconsole.log(\"Environment Type:\", typeof window !== 'undefined' ? \"Client\" : \"Server\");\nconsole.log(\"Using API Key:\", firebaseConfig.apiKey ? \"Present\" : \"MISSING or undefined in config\");\nconsole.log(\"Using Auth Domain:\", firebaseConfig.authDomain ? \"Present\" : \"MISSING or undefined in config\");\nconsole.log(\"Using Project ID:\", firebaseConfig.projectId ? \"Present\" : \"MISSING or undefined in config\");\n// Add other config values if needed for detailed logging\nconsole.log(\"---------------------------------------------------------\");\n\nif (!firebaseConfig.apiKey || !firebaseConfig.projectId) {\n  console.error(\n    \"CRITICAL FIREBASE CONFIG ERROR (src/lib/firebase.ts): API Key or Project ID is missing or undefined in the firebaseConfig object. \" +\n    \"Please ensure NEXT_PUBLIC_FIREBASE_API_KEY and NEXT_PUBLIC_FIREBASE_PROJECT_ID are correctly set in your .env file at the project root \" +\n    \"and that the Next.js server has been restarted after changes to .env.\"\n  );\n}\n\nlet app: FirebaseApp;\n\ntry {\n  if (!getApps().length) {\n    app = initializeApp(firebaseConfig);\n    console.log(\"Firebase app initialized (src/lib/firebase.ts).\");\n  } else {\n    app = getApps()[0]!;\n    console.log(\"Firebase app already initialized (src/lib/firebase.ts).\");\n  }\n} catch (e: any) {\n  console.error(\"FATAL ERROR initializing Firebase App (src/lib/firebase.ts):\", e.message);\n  if (e.code === 'auth/invalid-api-key' || (e.message && e.message.toLowerCase().includes('invalid-api-key'))) {\n     console.error(\n        \"Firebase Auth Error (invalid-api-key) from src/lib/firebase.ts: This strongly suggests that your NEXT_PUBLIC_FIREBASE_API_KEY \" +\n        \"is incorrect, missing, or not accessible by the current environment. \" +\n        \"1. Verify the key in your project's root .env file against your Firebase project settings. \" +\n        \"2. Ensure the Next.js development server was restarted after any .env changes.\"\n    );\n  }\n  // Re-throw the error to ensure the application doesn't proceed with a broken Firebase setup.\n  throw e;\n}\n\n// These services depend on 'app' being successfully initialized.\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst storage = getStorage(app);\n\nif (typeof window !== 'undefined') {\n  setPersistence(auth, browserLocalPersistence)\n    .catch((error) => {\n      console.error(\"Error setting Firebase auth persistence (src/lib/firebase.ts):\", error);\n    });\n}\n\nexport { app, auth, db, storage };\n"],"names":[],"mappings":";;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAEA,uDAAuD;AACvD,QAAQ,GAAG,CAAC;AACZ,QAAQ,GAAG,CAAC,qCAAqC,oDAA4C;AAC7F,QAAQ,GAAG,CAAC,yCAAyC,wDAAgD;AACrG,QAAQ,GAAG,CAAC,wCAAwC,uDAA+C;AACnG,QAAQ,GAAG,CAAC,4CAA4C,2DAAmD;AAC3G,QAAQ,GAAG,CAAC,iDAAiD,gEAAwD;AACrH,QAAQ,GAAG,CAAC,oCAAoC,mDAA2C;AAC3F,QAAQ,GAAG,CAAC,4CAA4C,2DAAmD;AAC3G,QAAQ,GAAG,CAAC;AAGZ,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACf;AAEA,+DAA+D;AAC/D,QAAQ,GAAG,CAAC;AACZ,QAAQ,GAAG,CAAC,qBAAqB,6EAA2C;AAC5E,QAAQ,GAAG,CAAC,kBAAkB,eAAe,MAAM,GAAG,YAAY;AAClE,QAAQ,GAAG,CAAC,sBAAsB,eAAe,UAAU,GAAG,YAAY;AAC1E,QAAQ,GAAG,CAAC,qBAAqB,eAAe,SAAS,GAAG,YAAY;AACxE,yDAAyD;AACzD,QAAQ,GAAG,CAAC;AAEZ,IAAI,CAAC,eAAe,MAAM,IAAI,CAAC,eAAe,SAAS,EAAE;IACvD,QAAQ,KAAK,CACX,uIACA,4IACA;AAEJ;AAEA,IAAI;AAEJ,IAAI;IACF,IAAI,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;QACrB,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;QACpB,QAAQ,GAAG,CAAC;IACd,OAAO;QACL,MAAM,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;QAClB,QAAQ,GAAG,CAAC;IACd;AACF,EAAE,OAAO,GAAQ;IACf,QAAQ,KAAK,CAAC,gEAAgE,EAAE,OAAO;IACvF,IAAI,EAAE,IAAI,KAAK,0BAA2B,EAAE,OAAO,IAAI,EAAE,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC,oBAAqB;QAC1G,QAAQ,KAAK,CACV,mIACA,0EACA,gGACA;IAEN;IACA,6FAA6F;IAC7F,MAAM;AACR;AAEA,iEAAiE;AACjE,MAAM,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;AACxB,MAAM,UAAU,CAAA,GAAA,oLAAA,CAAA,aAAU,AAAD,EAAE;AAE3B,uCAAmC;;AAKnC","debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/schemas.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\n// Schema for updating user profile details (firstName, lastName, phoneNumber)\nexport const UserProfileUpdateSchema = z.object({\n  userId: z.string().min(1, \"User ID is required.\"),\n  firstName: z.string().min(1, { message: 'First name cannot be empty.' }).max(50, { message: 'First name is too long.' }),\n  lastName: z.string().min(1, { message: 'Last name cannot be empty.' }).max(50, { message: 'Last name is too long.' }),\n  phoneNumber: z.string()\n    .max(20, { message: 'Phone number must be 20 characters or less.' })\n    .regex(/^$|^(\\+?[1-9]\\d{1,14})$/, { message: \"Invalid phone number format. Use E.164 or leave empty (e.g. +1234567890)\" })\n    .optional().or(z.literal('')), // Allows empty string or valid phone\n});\nexport type UserProfileUpdateInput = z.infer<typeof UserProfileUpdateSchema>;\n\n// Schema for adding/editing a shipping address (for the addresses subcollection)\nexport const AddressSchema = z.object({\n  userId: z.string().min(1, \"User ID is required.\"),\n  addressId: z.string().optional(), // For updates, not used for add\n  fullName: z.string().min(1, 'Full name for shipping is required.').max(100, 'Full name is too long.'),\n  street: z.string().min(1, 'Street address is required.').max(200, 'Street address is too long.'),\n  city: z.string().min(1, 'City is required.').max(100, 'City name is too long.'),\n  state: z.string().min(1, 'State/Province is required.').max(100, 'State/Province name is too long.'),\n  postalCode: z.string().min(1, 'Postal code is required.').max(20, 'Postal code is too long.'),\n  country: z.string().min(1, 'Country is required.').max(100, 'Country name is too long.'),\n  phoneNumber: z.string()\n    .max(20, 'Phone number must be 20 characters or less.')\n    .regex(/^$|^(\\+?[1-9]\\d{1,14})$/, { message: \"Invalid phone number format. Use E.164 or leave empty.\" })\n    .optional().or(z.literal('')),\n});\nexport type AddressInput = z.infer<typeof AddressSchema>;\n\n\n// --- Product Form Schema (Remains active for /add-product page) ---\nconst ProductImageSchema = z.object({\n  url: z.string().url({ message: \"Invalid image URL.\" }),\n  dataAiHint: z.string().max(50, { message: \"AI hint too long.\" }).optional().or(z.literal('')),\n});\n\nexport const ProductFormSchema = z.object({\n  name: z.string().min(1, \"Product name is required.\").max(100, \"Product name is too long.\"),\n  description: z.string().min(1, \"Description is required.\").max(5000, \"Description is too long.\"),\n  careInstructions: z.string().max(1000, \"Care instructions too long.\").optional().or(z.literal('')),\n  price: z.string().min(1, \"Price is required.\").regex(/^\\s*Rs\\.\\s*\\d+(\\.\\d{1,2})?\\s*$/, { message: \"Price must be in format 'Rs. 123.45'\" }),\n  category: z.string().min(1, \"Category is required.\").max(50, \"Category name too long.\"),\n  isLatest: z.boolean().optional(),\n  sizeAndDimensions: z.string().max(100, \"Size/dimensions info too long.\").optional().or(z.literal('')),\n  material: z.string().max(100, \"Material info too long.\").optional().or(z.literal('')),\n  imageUrls: z.array(ProductImageSchema).min(1, \"At least one image is required.\"),\n});\n\nexport type ProductFormInput = z.infer<typeof ProductFormSchema>;\n\n\n// --- Registration Schema (for /register page) ---\nexport const SignUpSchemaWithAddress = z.object({\n  firstName: z.string().min(1, { message: 'First name is required.' }).max(50, { message: 'First name is too long.' }),\n  lastName: z.string().min(1, { message: 'Last name is required.' }).max(50, { message: 'Last name is too long.' }),\n  email: z.string().email({ message: 'Invalid email address.' }),\n  phoneNumber: z.string()\n    .max(20, { message: 'Phone number must be 20 characters or less.' })\n    .regex(/^$|^(\\+?[1-9]\\d{1,14})$/, { message: \"Invalid phone number format. Use E.164 or leave empty.\" })\n    .optional().or(z.literal('')),\n  password: z.string().min(6, { message: 'Password must be at least 6 characters long.' }),\n  confirmPassword: z.string(),\n  // Address fields for initial registration\n  addressStreet: z.string().min(1, 'Street address is required.').max(200, 'Street address is too long.'),\n  addressCity: z.string().min(1, 'City is required.').max(100, 'City name is too long.'),\n  addressState: z.string().min(1, 'State/Province is required.').max(100, 'State/Province name is too long.'),\n  addressPostalCode: z.string().min(1, 'Postal code is required.').max(20, 'Postal code is too long.'),\n  addressCountry: z.string().min(1, 'Country is required.').max(100, 'Country name is too long.'),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match.\",\n  path: ['confirmPassword'], // Error will be associated with the confirmPassword field\n});\nexport type SignUpWithAddressInput = z.infer<typeof SignUpSchemaWithAddress>;\n\n// --- SignIn Schema (for /signin page) ---\nexport const SignInSchema = z.object({\n  email: z.string().email({ message: 'Invalid email address.' }),\n  password: z.string().min(1, { message: 'Password is required.' }), // Password can't be empty\n});\nexport type SignInInput = z.infer<typeof SignInSchema>;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/signin/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { auth } from '@/lib/firebase'; // Import Firebase auth instance\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { SignInSchema, type SignInInput } from '@/lib/schemas';\n\nexport interface SignInUserFormState {\n  message: string | null;\n  errors?: Partial<Record<keyof SignInInput | '_form', string[]>>;\n  success: boolean;\n  userId?: string; // To pass the UID back to the client\n}\n\nexport async function signInUserAction(prevState: SignInUserFormState, formData: FormData): Promise<SignInUserFormState> {\n  console.log(\"SignInUserAction (Server Action): Action invoked.\");\n  const rawFormData = {\n    email: formData.get('email'),\n    password: formData.get('password'),\n  };\n  console.log(\"SignInUserAction (Server Action): Raw form data:\", rawFormData);\n\n  const validation = SignInSchema.safeParse(rawFormData);\n\n  if (!validation.success) {\n    console.error(\"SignInUserAction (Server Action): Server-side validation failed:\", validation.error.flatten().fieldErrors);\n    return {\n      errors: validation.error.flatten().fieldErrors,\n      message: 'Invalid login data. Please check your input.',\n      success: false,\n    };\n  }\n  console.log(\"SignInUserAction (Server Action): Server-side validation successful.\");\n\n  const { email, password } = validation.data;\n\n  try {\n    console.log(`SignInUserAction (Server Action): Attempting to sign in user: ${email}`);\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    console.log(`SignInUserAction (Server Action): User ${userCredential.user.uid} signed in successfully.`);\n    return {\n      message: 'Login successful! You will be redirected shortly.',\n      success: true,\n      userId: userCredential.user.uid,\n    };\n\n  } catch (error: any) {\n    console.error('SignInUserAction (Server Action): Firebase Authentication Error:', error);\n    let errorMessage = 'Login failed. An unexpected error occurred. Please try again.';\n    let fieldErrors: Partial<Record<keyof SignInInput | '_form', string[]>> = { _form: [errorMessage] };\n\n    // Handle specific Firebase Auth error codes\n    // error.code is Firebase specific\n    if (error.code) {\n        switch (error.code) {\n        case 'auth/invalid-credential': // Covers user-not-found, wrong-password in modern SDKs\n            errorMessage = 'Invalid email or password. Please check your credentials and try again.';\n            fieldErrors = { _form: [errorMessage] }; // General error for security\n            break;\n        case 'auth/user-not-found': // explicit if backend sends it\n             errorMessage = 'No user found with this email address.';\n             fieldErrors = { email: [errorMessage] };\n            break;\n        case 'auth/wrong-password': // explicit if backend sends it\n             errorMessage = 'Incorrect password. Please try again.';\n             fieldErrors = { password: [errorMessage] };\n            break;\n        case 'auth/invalid-email':\n            errorMessage = 'The email address format is not valid.';\n            fieldErrors = { email: [errorMessage] };\n            break;\n        case 'auth/user-disabled':\n            errorMessage = 'This user account has been disabled.';\n            fieldErrors = { _form: [errorMessage] };\n            break;\n        case 'auth/too-many-requests':\n            errorMessage = 'Access to this account has been temporarily disabled due to many failed login attempts. You can try again later or reset your password.';\n            fieldErrors = { _form: [errorMessage] };\n            break;\n        default:\n            // This covers other unexpected Firebase errors\n            errorMessage = `Login failed: ${error.message || 'An unknown server error occurred.'}`;\n            fieldErrors = { _form: [errorMessage] };\n            break;\n        }\n    } else {\n        // This covers non-Firebase errors, or if error.code is somehow not present\n         fieldErrors = { _form: [errorMessage] };\n    }\n\n\n    return {\n      message: errorMessage,\n      success: false,\n      errors: fieldErrors,\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;AAGA,8MAAuC,gCAAgC;AACvE;AAAA;AACA;;;;;;;AASO,eAAe,iBAAiB,SAA8B,EAAE,QAAkB;IACvF,QAAQ,GAAG,CAAC;IACZ,MAAM,cAAc;QAClB,OAAO,SAAS,GAAG,CAAC;QACpB,UAAU,SAAS,GAAG,CAAC;IACzB;IACA,QAAQ,GAAG,CAAC,oDAAoD;IAEhE,MAAM,aAAa,qHAAA,CAAA,eAAY,CAAC,SAAS,CAAC;IAE1C,IAAI,CAAC,WAAW,OAAO,EAAE;QACvB,QAAQ,KAAK,CAAC,oEAAoE,WAAW,KAAK,CAAC,OAAO,GAAG,WAAW;QACxH,OAAO;YACL,QAAQ,WAAW,KAAK,CAAC,OAAO,GAAG,WAAW;YAC9C,SAAS;YACT,SAAS;QACX;IACF;IACA,QAAQ,GAAG,CAAC;IAEZ,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,WAAW,IAAI;IAE3C,IAAI;QACF,QAAQ,GAAG,CAAC,CAAC,8DAA8D,EAAE,OAAO;QACpF,MAAM,iBAAiB,MAAM,CAAA,GAAA,6PAAA,CAAA,6BAA0B,AAAD,EAAE,sHAAA,CAAA,OAAI,EAAE,OAAO;QACrE,QAAQ,GAAG,CAAC,CAAC,uCAAuC,EAAE,eAAe,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC;QACvG,OAAO;YACL,SAAS;YACT,SAAS;YACT,QAAQ,eAAe,IAAI,CAAC,GAAG;QACjC;IAEF,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,oEAAoE;QAClF,IAAI,eAAe;QACnB,IAAI,cAAsE;YAAE,OAAO;gBAAC;aAAa;QAAC;QAElG,4CAA4C;QAC5C,kCAAkC;QAClC,IAAI,MAAM,IAAI,EAAE;YACZ,OAAQ,MAAM,IAAI;gBAClB,KAAK;oBACD,eAAe;oBACf,cAAc;wBAAE,OAAO;4BAAC;yBAAa;oBAAC,GAAG,6BAA6B;oBACtE;gBACJ,KAAK;oBACA,eAAe;oBACf,cAAc;wBAAE,OAAO;4BAAC;yBAAa;oBAAC;oBACvC;gBACJ,KAAK;oBACA,eAAe;oBACf,cAAc;wBAAE,UAAU;4BAAC;yBAAa;oBAAC;oBAC1C;gBACJ,KAAK;oBACD,eAAe;oBACf,cAAc;wBAAE,OAAO;4BAAC;yBAAa;oBAAC;oBACtC;gBACJ,KAAK;oBACD,eAAe;oBACf,cAAc;wBAAE,OAAO;4BAAC;yBAAa;oBAAC;oBACtC;gBACJ,KAAK;oBACD,eAAe;oBACf,cAAc;wBAAE,OAAO;4BAAC;yBAAa;oBAAC;oBACtC;gBACJ;oBACI,+CAA+C;oBAC/C,eAAe,CAAC,cAAc,EAAE,MAAM,OAAO,IAAI,qCAAqC;oBACtF,cAAc;wBAAE,OAAO;4BAAC;yBAAa;oBAAC;oBACtC;YACJ;QACJ,OAAO;YACH,2EAA2E;YAC1E,cAAc;gBAAE,OAAO;oBAAC;iBAAa;YAAC;QAC3C;QAGA,OAAO;YACL,SAAS;YACT,SAAS;YACT,QAAQ;QACV;IACF;AACF;;;IAnFsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 439, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/signin/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {signInUserAction as '6018882781e23f61bf67fe901b0f720645bf2de05b'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 491, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/signin/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/signin/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/signin/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2R,GACxT,yDACA","debugId":null}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/signin/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/signin/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/signin/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuQ,GACpS,qCACA","debugId":null}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}
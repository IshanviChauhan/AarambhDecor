{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApps, type FirebaseApp } from 'firebase/app';\nimport { getAuth, browserLocalPersistence, setPersistence } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID,\n};\n\n// Client-side logging for Firebase config\nif (typeof window !== 'undefined') {\n  console.log(\"--- Firebase Client-Side Configuration ---\");\n  console.log(\"API Key:\", firebaseConfig.apiKey ? \"Loaded\" : \"MISSING or undefined\");\n  console.log(\"Auth Domain:\", firebaseConfig.authDomain ? \"Loaded\" : \"MISSING or undefined\");\n  console.log(\"Project ID:\", firebaseConfig.projectId ? \"Loaded\" : \"MISSING or undefined\");\n  console.log(\"Storage Bucket:\", firebaseConfig.storageBucket ? \"Loaded\" : \"MISSING or undefined\");\n  console.log(\"Messaging Sender ID:\", firebaseConfig.messagingSenderId ? \"Loaded\" : \"MISSING or undefined\");\n  console.log(\"App ID:\", firebaseConfig.appId ? \"Loaded\" : \"MISSING or undefined\");\n  console.log(\"Measurement ID:\", firebaseConfig.measurementId ? `Loaded (${firebaseConfig.measurementId}) (Optional)` : \"Not defined (Optional)\");\n  console.log(\"-----------------------------------------\");\n\n  if (!firebaseConfig.apiKey || !firebaseConfig.projectId) {\n    console.error(\"CRITICAL: Firebase API Key or Project ID is missing. Ensure NEXT_PUBLIC_ prefixes are used in your .env.local file and it's correctly loaded.\");\n  }\n  // Updated warning for storage bucket\n  if (firebaseConfig.storageBucket && firebaseConfig.projectId && firebaseConfig.storageBucket !== `${firebaseConfig.projectId}.appspot.com`) {\n     console.warn(`POTENTIAL CONFIG ISSUE: Your NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET value is \"${firebaseConfig.storageBucket}\". It's typically recommended to be \"${firebaseConfig.projectId}.appspot.com\". Please verify this in your .env file and Firebase project settings if you encounter storage issues.`);\n  } else if (firebaseConfig.storageBucket && !firebaseConfig.projectId) {\n     console.warn(`POTENTIAL CONFIG ISSUE: Your NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET (\"${firebaseConfig.storageBucket}\") is defined, but NEXT_PUBLIC_FIREBASE_PROJECT_ID is missing. The typical storage bucket name format is \"<project-id>.appspot.com\".`);\n  }\n}\n\n\nlet app: FirebaseApp;\n\nif (!getApps().length) {\n  try {\n    app = initializeApp(firebaseConfig);\n    if (typeof window !== 'undefined') {\n      console.log(\"Firebase app initialized successfully.\");\n      console.log(`Initialized Firebase app name: ${app.name}`); // Default is \"[DEFAULT]\"\n      console.log(`Initialized Firebase app Project ID from options: ${app.options.projectId}`);\n    }\n  } catch (e) {\n    console.error(\"Error initializing Firebase app:\", e);\n    // It's often better not to throw here in client-side code if you want the app to attempt to run partially\n    // throw e; \n  }\n} else {\n  app = getApps()[0]!;\n  if (typeof window !== 'undefined') {\n    console.log(\"Firebase app already initialized.\");\n    console.log(`Reusing Firebase app name: ${app.name}`);\n    console.log(`Reusing Firebase app Project ID from options: ${app.options.projectId}`);\n  }\n}\n\nconst auth = getAuth(app!); // Add non-null assertion if app could be undefined due to caught error\n\nif (typeof window !== 'undefined' && app!) { // ensure app is initialized\n  setPersistence(auth, browserLocalPersistence)\n    .then(() => {\n      // console.log(\"Firebase auth persistence explicitly set to 'local'.\"); // Can be noisy, uncomment if needed\n    })\n    .catch((error) => {\n      console.error(\"Error setting Firebase auth persistence:\", error);\n    });\n}\n\nconst db = getFirestore(app!); // Add non-null assertion\nconst storage = getStorage(app!); // Initialize Firebase Storage\n\nexport { app, auth, db, storage };\n\n"],"names":[],"mappings":";;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACf;AAEA,0CAA0C;AAC1C,uCAAmC;;AAoBnC;AAGA,IAAI;AAEJ,IAAI,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;IACrB,IAAI;QACF,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;QACpB,uCAAmC;;QAInC;IACF,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,oCAAoC;IAClD,0GAA0G;IAC1G,YAAY;IACd;AACF,OAAO;IACL,MAAM,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;IAClB,uCAAmC;;IAInC;AACF;AAEA,MAAM,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE,MAAO,uEAAuE;AAEnG,uCAA2C;;AAQ3C;AAEA,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE,MAAO,yBAAyB;AACxD,MAAM,UAAU,CAAA,GAAA,oLAAA,CAAA,aAAU,AAAD,EAAE,MAAO,8BAA8B","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/schemas.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\n// Schema for updating user profile details\nexport const UserProfileUpdateSchema = z.object({\n  userId: z.string().min(1, \"User ID is required.\"), // Temporary for actions without proper session\n  firstName: z.string().min(1, { message: 'First name cannot be empty.' }).max(50, { message: 'First name is too long.' }),\n  lastName: z.string().min(1, { message: 'Last name cannot be empty.' }).max(50, { message: 'Last name is too long.' }),\n  phoneNumber: z.string()\n    .max(20, { message: 'Phone number must be 20 characters or less.' })\n    .regex(/^$|^(\\+?[1-9]\\d{1,14})$/, { message: \"Invalid phone number format. Should be empty or like +1234567890\" })\n    .optional().or(z.literal('')),\n});\nexport type UserProfileUpdateInput = z.infer<typeof UserProfileUpdateSchema>;\n\n// Schema for adding/editing a shipping address\nexport const AddressSchema = z.object({\n  userId: z.string().min(1, \"User ID is required.\"), // Temporary for actions without proper session\n  addressId: z.string().optional(), // For updates\n  fullName: z.string().min(1, 'Full name is required.').max(100, 'Full name is too long.'),\n  street: z.string().min(1, 'Street address is required.').max(200, 'Street address is too long.'),\n  city: z.string().min(1, 'City is required.').max(100, 'City name is too long.'),\n  state: z.string().min(1, 'State/Province is required.').max(100, 'State/Province name is too long.'),\n  postalCode: z.string().min(1, 'Postal code is required.').max(20, 'Postal code is too long.'),\n  country: z.string().min(1, 'Country is required.').max(100, 'Country name is too long.'),\n  phoneNumber: z.string().max(20, 'Phone number must be 20 characters or less.')\n    .regex(/^$|^(\\+?[1-9]\\d{1,14})$/, { message: \"Invalid phone number format. Should be empty or like +1234567890\" })\n    .optional().or(z.literal('')),\n  // isDefault: z.boolean().optional(), // If you want a default address flag\n});\nexport type AddressInput = z.infer<typeof AddressSchema>;\n\n\n// --- Product Form Schema (Remains active) ---\nconst ProductImageSchema = z.object({\n  url: z.string().url({ message: \"Invalid image URL.\" }),\n  dataAiHint: z.string().max(50, { message: \"AI hint too long.\" }).optional().or(z.literal('')),\n});\n\nexport const ProductFormSchema = z.object({\n  name: z.string().min(1, \"Product name is required.\").max(100, \"Product name is too long.\"),\n  description: z.string().min(1, \"Description is required.\").max(5000, \"Description is too long.\"),\n  careInstructions: z.string().max(1000, \"Care instructions too long.\").optional().or(z.literal('')),\n  price: z.string().min(1, \"Price is required.\").regex(/^\\s*Rs\\.\\s*\\d+(\\.\\d{1,2})?\\s*$/, { message: \"Price must be in format 'Rs. 123.45'\" }),\n  category: z.string().min(1, \"Category is required.\").max(50, \"Category name too long.\"),\n  isLatest: z.boolean().optional(),\n  sizeAndDimensions: z.string().max(100, \"Size/dimensions info too long.\").optional().or(z.literal('')),\n  material: z.string().max(100, \"Material info too long.\").optional().or(z.literal('')),\n  imageUrls: z.array(ProductImageSchema).min(1, \"At least one image is required.\"),\n});\n\nexport type ProductFormInput = z.infer<typeof ProductFormSchema>;\n\n\n// --- Registration Schema ---\nexport const SignUpSchemaWithAddress = z.object({\n  firstName: z.string().min(1, { message: 'First name is required.' }).max(50, { message: 'First name is too long.' }),\n  lastName: z.string().min(1, { message: 'Last name is required.' }).max(50, { message: 'Last name is too long.' }),\n  email: z.string().email({ message: 'Invalid email address.' }),\n  phoneNumber: z.string()\n    .max(20, { message: 'Phone number must be 20 characters or less.' })\n    .regex(/^$|^(\\+?[1-9]\\d{1,14})$/, { message: \"Invalid phone number format. Should be empty or like +1234567890\" })\n    .optional().or(z.literal('')),\n  password: z.string().min(6, { message: 'Password must be at least 6 characters long.' }),\n  confirmPassword: z.string(),\n  addressStreet: z.string().min(1, 'Street address is required.').max(200, 'Street address is too long.'),\n  addressCity: z.string().min(1, 'City is required.').max(100, 'City name is too long.'),\n  addressState: z.string().min(1, 'State/Province is required.').max(100, 'State/Province name is too long.'),\n  addressPostalCode: z.string().min(1, 'Postal code is required.').max(20, 'Postal code is too long.'),\n  addressCountry: z.string().min(1, 'Country is required.').max(100, 'Country name is too long.'),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match.\",\n  path: ['confirmPassword'],\n});\nexport type SignUpWithAddressInput = z.infer<typeof SignUpSchemaWithAddress>;\n\n// --- SignIn Schema ---\nexport const SignInSchema = z.object({\n  email: z.string().email({ message: 'Invalid email address.' }),\n  password: z.string().min(1, { message: 'Password is required.' }),\n});\nexport type SignInInput = z.infer<typeof SignInSchema>;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/profile/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { db } from '@/lib/firebase';\nimport { doc, updateDoc, collection, addDoc, getDoc, getDocs, query, orderBy, serverTimestamp, deleteDoc, where } from 'firebase/firestore';\nimport type { UserProfile, UserAddress, Order } from '@/lib/types';\nimport { UserProfileUpdateSchema, AddressSchema, type UserProfileUpdateInput, type AddressInput } from '@/lib/schemas';\nimport { revalidatePath } from 'next/cache';\n\nexport interface FormState {\n  message: string | null;\n  errors?: Partial<Record<string, string[] | undefined>> & { _form?: string[] };\n  success: boolean;\n  data?: any;\n}\n\nconst featureDisabledMessage = \"This specific profile feature is currently under development or disabled.\";\nconst authNeededMessage = \"User ID is required for this action. Please ensure you are logged in.\";\nconst genericErrorMessage = \"An unexpected error occurred. Please try again.\";\n\n// --- Profile Update Action ---\nexport async function updateUserProfileAction(prevState: FormState, formData: FormData): Promise<FormState> {\n  const rawFormData = {\n    userId: formData.get('userId'),\n    firstName: formData.get('firstName'),\n    lastName: formData.get('lastName'),\n    phoneNumber: formData.get('phoneNumber'),\n  };\n\n  const validation = UserProfileUpdateSchema.safeParse(rawFormData);\n\n  if (!validation.success) {\n    return {\n      errors: validation.error.flatten().fieldErrors,\n      message: 'Invalid profile data.',\n      success: false,\n    };\n  }\n\n  const { userId, ...profileData } = validation.data;\n\n  if (!userId) {\n    return { message: authNeededMessage, success: false, errors: { _form: [authNeededMessage] } };\n  }\n\n  try {\n    const userProfileRef = doc(db, 'userProfile', userId);\n    const profileSnap = await getDoc(userProfileRef);\n    if (!profileSnap.exists()) {\n        return { message: \"User profile not found. Cannot update.\", success: false, errors: { _form: [\"User profile not found.\"] } };\n    }\n\n    const updateData: Partial<Pick<UserProfile, 'firstName' | 'lastName' | 'phoneNumber'>> = {\n        firstName: profileData.firstName,\n        lastName: profileData.lastName,\n        phoneNumber: profileData.phoneNumber || null,\n    };\n\n    await updateDoc(userProfileRef, updateData);\n    revalidatePath('/profile');\n    return { message: 'Profile updated successfully!', success: true, data: { userId } }; // Pass back userId for potential re-fetch\n  } catch (error) {\n    console.error('Error updating user profile:', error);\n    const errorMessage = error instanceof Error ? error.message : genericErrorMessage;\n    return { message: `Failed to update profile: ${errorMessage}`, success: false, errors: { _form: [errorMessage] } };\n  }\n}\n\n// --- Add Shipping Address Action ---\nexport async function addShippingAddressAction(prevState: FormState, formData: FormData): Promise<FormState> {\n  const rawFormData = {\n    userId: formData.get('userId'),\n    fullName: formData.get('fullName'),\n    street: formData.get('street'),\n    city: formData.get('city'),\n    state: formData.get('state'),\n    postalCode: formData.get('postalCode'),\n    country: formData.get('country'),\n    phoneNumber: formData.get('phoneNumber'),\n  };\n\n  const validation = AddressSchema.safeParse(rawFormData);\n\n  if (!validation.success) {\n    return {\n      errors: validation.error.flatten().fieldErrors,\n      message: 'Invalid address data.',\n      success: false,\n    };\n  }\n\n  const { userId, ...addressData } = validation.data;\n\n  if (!userId) {\n     return { message: authNeededMessage, success: false, errors: { _form: [authNeededMessage] } };\n  }\n\n  try {\n    const addressesColRef = collection(db, 'userProfile', userId, 'addresses');\n    const { addressId, ...newAddressData } = addressData; // Exclude addressId for new addresses\n\n    const dataToSave: Omit<UserAddress, 'id' | 'createdAt'> & { createdAt: any } = {\n        ...newAddressData,\n        phoneNumber: newAddressData.phoneNumber || null,\n        createdAt: serverTimestamp(),\n    };\n    await addDoc(addressesColRef, dataToSave);\n    revalidatePath('/profile');\n    return { message: 'Shipping address added successfully!', success: true, data: { userId } }; // Pass back userId\n  } catch (error) {\n    console.error('Error adding shipping address:', error);\n    const errorMessage = error instanceof Error ? error.message : genericErrorMessage;\n    return { message: `Failed to add address: ${errorMessage}`, success: false, errors: { _form: [errorMessage] } };\n  }\n}\n\n// --- Data Fetching Functions (Not Server Actions for useActionState) ---\nexport async function getUserProfile(userId: string): Promise<UserProfile | null> {\n  if (!userId) {\n    console.error(\"getUserProfile: userId is required.\");\n    return null;\n  }\n  try {\n    const userProfileRef = doc(db, 'userProfile', userId);\n    const docSnap = await getDoc(userProfileRef);\n    if (docSnap.exists()) {\n      const data = docSnap.data();\n      // Ensure all expected fields are present, providing defaults if necessary\n      return {\n        uid: docSnap.id,\n        email: data.email || '',\n        firstName: data.firstName || '',\n        lastName: data.lastName || '',\n        phoneNumber: data.phoneNumber || null,\n        address: data.address ? {\n          street: data.address.street || '',\n          city: data.address.city || '',\n          state: data.address.state || '',\n          postalCode: data.address.postalCode || '',\n          country: data.address.country || '',\n        } : undefined,\n        createdAt: data.createdAt || null,\n      } as UserProfile;\n    }\n    return null;\n  } catch (error) {\n    console.error(\"Error fetching user profile in action:\", error);\n    return null;\n  }\n}\n\nexport async function getShippingAddresses(userId: string): Promise<UserAddress[]> {\n   if (!userId) {\n    console.error(\"getShippingAddresses: userId is required.\");\n    return [];\n  }\n  try {\n    const addressesColRef = collection(db, 'userProfile', userId, 'addresses');\n    const snapshot = await getDocs(query(addressesColRef, orderBy(\"createdAt\", \"desc\")));\n    const addresses: UserAddress[] = [];\n    snapshot.forEach(doc => {\n        const data = doc.data();\n        addresses.push({ \n            id: doc.id,\n            street: data.street || '',\n            city: data.city || '',\n            state: data.state || '',\n            postalCode: data.postalCode || '',\n            country: data.country || '',\n            fullName: data.fullName || '',\n            phoneNumber: data.phoneNumber || null,\n            isDefault: data.isDefault || false,\n            createdAt: data.createdAt || null,\n        } as UserAddress)\n    });\n    return addresses;\n  } catch (error) {\n    console.error(\"Error fetching shipping addresses in action:\", error);\n    return [];\n  }\n}\n\nexport async function getOrderHistory(userId: string): Promise<Order[]> {\n   if (!userId) {\n    console.error(\"getOrderHistory: userId is required.\");\n    return [];\n  }\n  try {\n    // Placeholder for fetching actual orders\n    // const ordersColRef = collection(db, 'orders');\n    // const q = query(ordersColRef, where(\"userId\", \"==\", userId), orderBy(\"orderDate\", \"desc\"));\n    // const snapshot = await getDocs(q);\n    // const orders: Order[] = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as Order));\n    // return orders;\n    console.warn(\"getOrderHistory called, but actual order fetching is not implemented yet.\");\n    return []; // Placeholder\n  } catch (error) {\n     console.error(\"Error fetching order history in action:\", error);\n    return [];\n  }\n}\n\n// --- Placeholder/Disabled Actions for future implementation ---\nexport async function updateShippingAddressAction(prevState: FormState, formData: FormData): Promise<FormState> {\n  console.warn(\"updateShippingAddressAction called, but feature is under development.\");\n  return { message: featureDisabledMessage, success: false, errors: { _form: [featureDisabledMessage] } };\n}\n\nexport async function deleteShippingAddressAction(userId: string, addressId: string): Promise<FormState> {\n  console.warn(\"deleteShippingAddressAction called. Feature under development.\");\n  if (!userId || !addressId) {\n    return { message: \"User ID and Address ID are required.\", success: false, errors: { _form: [\"User ID and Address ID are required.\"] } };\n  }\n  // try {\n  //   const addressRef = doc(db, 'userProfile', userId, 'addresses', addressId);\n  //   await deleteDoc(addressRef);\n  //   revalidatePath('/profile');\n  //   return { message: \"Address deleted successfully!\", success: true, data: { userId, addressId } };\n  // } catch (error) {\n  //   console.error('Error deleting shipping address:', error);\n  //   const errorMessage = error instanceof Error ? error.message : genericErrorMessage;\n  //   return { message: `Failed to delete address: ${errorMessage}`, success: false, errors: { _form: [errorMessage] } };\n  // }\n  return { message: featureDisabledMessage, success: false, errors: { _form: [featureDisabledMessage] } };\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 590, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/profile/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {updateUserProfileAction as '60d24c4e2b242193842893145db426b35776e13355'} from 'ACTIONS_MODULE0'\nexport {addShippingAddressAction as '609b958ea14ed8dfa2c6f65d275a6ba9dd3ad8c153'} from 'ACTIONS_MODULE0'\nexport {getUserProfile as '40fe6603d91f5a751eed290526a98a502baf065533'} from 'ACTIONS_MODULE0'\nexport {getShippingAddresses as '400f32b80b5a7598c3f71f25d604d9d7e07a18931b'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 651, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/profile/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/profile/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/profile/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4R,GACzT,0DACA","debugId":null}},
    {"offset": {"line": 665, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/profile/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/profile/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/profile/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwQ,GACrS,sCACA","debugId":null}},
    {"offset": {"line": 679, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}